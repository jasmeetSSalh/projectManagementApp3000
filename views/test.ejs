<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Project Manager Timeline</title>
  <style>
    * {
      margin: 0;
      padding: 0;
      font-family: sans-serif;
    }
    .chartMenu {
      width: 100vw;
      height: 40px;
      background: #1A1A1A;
      color: rgba(54, 162, 235, 1);
    }
    .chartCard {
      width: 100vw;
      height: calc(100vh);
      background: rgba(54, 162, 235, 0.2);
      display: flex;
      align-items: center;
      justify-content: center;
    }
    .chartBox {
      width: 60%;
      padding: 20px;
      margin-left: 10%;
      border-radius: 20px;
      border: solid 3px rgb(0, 0, 0);
      background: white;
    }
    .dropdown {
      min-width: 15em;
      position: relative;
      margin: 2em;
    }
    .dropdown * {
      box-sizing: border-box;
    }
    .select {
      background: #2a2f3b;
      color: #fff;
      display: flex;
      justify-content: space-between;
      align-items: center;
      border: 2px #2a2f3b solid;
      border-radius: 0.5em;
      padding: 1em;
      cursor: pointer;
      transition: 0.3s;
    }
    .select-clicked {
      border: 2px #26489a solid;
      box-shadow: 0 0 0.8em #26489a;
    }
    .select:hover {
      background: #323741;
    }
    .caret {
      width: 0;
      height: 0;
      border-left: 5px solid transparent;
      border-right: 5px solid transparent;
      border-top: 6px solid #fff;
      transition: 0.3s;
    }
    .caret-rotate {
      transform: rotate(180deg);
    }
    .menu {
      list-style: none;
      padding: 0.2em 0.5em;
      background: #323741;
      border: 1px #363a43 solid;
      box-shadow: 0 0.5em  1em rgba(0,0,0,0.2);
      border-radius: 0.5em;
      color: #9fa5b5;
      position: absolute;
      top: 3.5em;
      left: 50%;
      width: 100%;
      transform: translateX(-50%);
      opacity: 0;
      display: none;
      transition: 0.2s;
      z-index: 1;
    }
    .menu li {
      padding: 0.7em 0.5em;
      margin: 0.3em 0;
      border-radius: 0.5em;
      cursor: pointer;
    }
    .menu li:hover {
      background: #2a2d35;
    }
    .active {
      background: #23242a;
    }
    .menu-open {
      display: block;
      opacity: 1;
    }
  </style>
</head>
<body>

  <div class="chartCard">
    <div class="dropdown">
      <div class="select">
        <span class="selected">Project #1</span>
        <div class="caret"></div>
      </div>
      <ul class="menu">
        <li class="active">Project #1</li>
        <li>Project #2</li>
        <li>Project #3</li>
      </ul>
    </div>
    <div class="chartBox">
      <canvas id="myChart"></canvas>
    </div>
  </div>
  
  <script type="text/javascript" src="https://cdn.jsdelivr.net/npm/chart.js/dist/chart.umd.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/chartjs-adapter-date-fns/dist/chartjs-adapter-date-fns.bundle.min.js"></script>  
  <script> const globalTasksArray = JSON.parse('<%- JSON.stringify(globalTasksArray) %>'); </script>
  
  <script>
    const dropdown = document.querySelector('.dropdown');
    const select = dropdown.querySelector('.select');
    const caret = dropdown.querySelector('.caret');
    const menu = dropdown.querySelector('.menu');
    const options = dropdown.querySelectorAll('.menu li');
    const selected = dropdown.querySelector('.selected');

    select.addEventListener('click', () => {
      select.classList.toggle('select-clicked');
      caret.classList.toggle('caret-rotate');
      menu.classList.toggle('menu-open');
    });

    options.forEach(option => {
      option.addEventListener('click', () => {
        selected.innerText = option.innerText;
        select.classList.remove('select-clicked');
        caret.classList.remove('caret-rotate');
        menu.classList.remove('menu-open');

        options.forEach(opt => {
          opt.classList.remove('active');
        });
        option.classList.add('active');
      });
    });


    const data = {
      datasets: [{
        label: 'Task Timeline',
        data: [],
        backgroundColor: [
          'rgba(255, 26, 104, 1)',
          'rgba(54, 162, 235, 1)',
          'rgba(255, 206, 86, 1)',
          'rgba(75, 192, 192, 1)',
          'rgba(153, 102, 255, 1)',
          'rgba(255, 159, 64, 1)',
          'rgba(0, 0, 0, 0.2)'
        ],
        borderColor: [
          'rgba(255, 26, 104, 1)',
          'rgba(54, 162, 235, 1)',
          'rgba(255, 206, 86, 1)',
          'rgba(75, 192, 192, 1)',
          'rgba(153, 102, 255, 1)',
          'rgba(255, 159, 64, 1)',
          'rgba(0, 0, 0, 1)'
        ],
        borderWidth: 1,
        borderSkipped: false,
        borderRadius: 12,
        barPercentage: 0.5
      }]
    };

    const currentday = {
      id: 'currentday',
      afterDatasetsDraw(chart, args, pluginOptions){
        const {ctx, data, chartArea: {top, bottom, left, right}, scales: {x, y}} = chart;
        ctx.save();
        ctx.beginPath();
        ctx.lineWidth = 3;
        ctx.strokeStyle = 'rgba(1, 1, 122, 1)';
        ctx.setLineDash([6,6]);
        ctx.moveTo(x.getPixelForValue(new Date()), top);
        ctx.lineTo(x.getPixelForValue(new Date()), bottom);
        ctx.stroke();
        ctx.setLineDash([]);
      }
    };

    const config = {
      type: 'bar',
      data,
      options: {
        indexAxis: 'y',
        scales: {
          x: {
            position: 'top',
            type: 'time',
            time: {
              unit: 'day'
            },
            min: '2023-12-01',
            max: '2023-12-31'
          }
        },
        plugins: {
          legend: {
            display: false
          }
        }
      },
      plugins: [currentday]
    };


    for (let i = 0; i < globalTasksArray.length; i++) {
        data.datasets[0].data.push({
        x: [globalTasksArray[i].assignedDate, globalTasksArray[i].dueDate],
        y: globalTasksArray[i].name
        });
    }
    const myChart = new Chart(document.getElementById('myChart'), config);

    const chartVersion = document.getElementById('chartVersion');
   
    chartVersion.innerText = Chart.version;
    

  </script>
</body>
</html>
